{"version":3,"sources":["component/Members/Member.js","component/Members/Members.js","component/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["member","props","className","key","id","first_name","last_name","onClick","onEditHandlerChange","deleteMember","members","map","Member","form","onSubmit","onSubmitHandler","htmlFor","type","name","value","onChange","disabled","buttonDisabled","App","onHandlerChange","event","setState","target","idSelected","formStatus","addMember","url","payload","axios","post","then","response","state","newMember","data","push","catch","error","console","log","editMember","put","editMembers","index","findIndex","delete","status","deleteMembers","splice","e","preventDefault","this","get","style","marginTop","Members","Form","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.16e2ab32.chunk.js","sourcesContent":["import React from \"react\";\n\nconst member = props => (\n  <div className=\"col-md-6\" key={props.member.id}>\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.member.id}</h5>\n        <h5 className=\"card-title\">{props.member.first_name}</h5>\n        <h5 className=\"card-title\">{props.member.last_name}</h5>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => props.onEditHandlerChange(props.member)}\n        >\n          Edit\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => props.deleteMember(props.member.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default member\n","import React from 'react'\nimport Member from './Member'\n\nconst members = (props) => (\n    props.members.map((member) => (\n        <Member \n        key={member.id}\n        member={member}\n        onEditHandlerChange={(member)=>props.onEditHandlerChange(member)}\n        deleteMember={(id)=>props.deleteMember(id)}/>\n      ))\n)\n\nexport default members","import React from 'react'\n\nconst form = (props) => (\n    <form onSubmit={props.onSubmitHandler}>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">First Name</label>\n                <input\n                  type=\"text\"\n                  name=\"first_name\"\n                  value={props.first_name}\n                  className=\"form-control\"\n                  onChange={props.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Last Name</label>\n                <input\n                  type=\"text\"\n                  name=\"last_name\"\n                  value={props.last_name}\n                  className=\"form-control\"\n                  onChange={props.onChange}\n                />\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                disabled={props.buttonDisabled}\n              >\n                Submit\n              </button>\n            </form>\n)\n\nexport default form","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Members from './component/Members/Members'\nimport Form from './component/Form/Form'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      members: [],\n      first_name: \"\",\n      last_name: \"\",\n      buttonDisabled: false,\n      idSelected: null,\n      formStatus: \"create\"\n    };\n  }\n\n  onHandlerChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onEditHandlerChange = member => {\n    this.setState({\n      first_name: member.first_name,\n      last_name: member.last_name,\n      idSelected: member.id,\n      formStatus: \"edit\"\n    });\n  };\n\n  addMember = (url,payload) => {\n    axios\n      .post(url, payload)\n      .then(response => {\n        // console.log(response);\n        let members = [...this.state.members];\n        let newMember = response.data;\n        members.push(newMember);\n        this.setState({\n          members: members,\n          first_name: \"\",\n          last_name: \"\",\n          buttonDisabled: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  editMember = (url, payload) => {\n    axios.put(url,payload)\n    .then(response => {\n      // console.log(response)\n      let editMembers = [...this.state.members]\n      let index = editMembers.findIndex(editMember => editMember.id === this.state.idSelected)\n      editMembers[index].first_name = response.data.first_name\n      editMembers[index].last_name = response.data.last_name\n\n      this.setState({\n        members: editMembers,\n        first_name: '',\n        last_name : '',\n        formStatus: 'create',\n        buttonDisabled: false\n      })\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  deleteMember = (id) => {\n    let url = `https://reqres.in/api/users/${id}`\n    axios.delete(url)\n    .then(response => {\n      // console.log(response)\n      if(response.status === 204){\n        let deleteMembers = [...this.state.members]\n        let index = deleteMembers.findIndex(deleteMember => deleteMember.id === id)\n        deleteMembers.splice(index, 1)\n        \n        this.setState({\n          members: deleteMembers\n        })\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  onSubmitHandler = e => {\n    e.preventDefault();\n    this.setState({\n      buttonDisabled: true\n    });\n    let url = `https://reqres.in/api/users`;\n    let payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    };\n    if(this.state.formStatus==='create'){\n      this.addMember(url,payload)\n    }\n    else {\n      url = `https://reqres.in/api/users/${this.state.idSelected}`\n      this.editMember(url,payload)\n    }\n  };\n\n  componentDidMount() {\n    let url = `https://reqres.in/api/users?page=1`;\n    let payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    };\n    axios\n      .get(url, payload)\n      .then(response => {\n        // console.log(response);\n        this.setState({\n          members: response.data.data\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 50 }}>\n        <h1>Developer</h1>\n        <div className=\"row\"></div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>Member</h1>\n            <div className=\"row\">\n              <Members \n              members={this.state.members}\n              onEditHandlerChange={(member)=>this.onEditHandlerChange(member)}\n              deleteMember={(id) => this.deleteMember(id)}/>\n            </div>\n          </div>\n          <div className=\"col\">\n            <h1>Form {this.state.formStatus}</h1>\n            <Form \n            onSubmitHandler={this.onSubmitHandler}\n            first_name={this.state.first_name}\n            last_name={this.state.last_name}\n            onChange={this.onHandlerChange}\n            buttonDisabled={this.state.buttonDisabled}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}